{
  "address": "0x9e77Ec5425D19F5DD49DD4C21357Bb0ffFb41218",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ngo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ngoDonationPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxEvents",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minWinnerPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IProde.BetOdd",
          "name": "bet",
          "type": "uint8"
        }
      ],
      "name": "BetPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ngoPrize",
          "type": "uint256"
        }
      ],
      "name": "ClaimNGO",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ClaimPrize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockInit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockEnd",
          "type": "uint256"
        }
      ],
      "name": "EventActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "EventBetsFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "EventCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "result",
          "type": "uint8"
        }
      ],
      "name": "EventOutcome",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "NGO",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NGODonationPercentage",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxEvents",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minWinnerPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMinPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinPoints",
          "type": "uint256"
        }
      ],
      "name": "MinWinnerPointsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ngoPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winnerPrize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmountToShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winners",
          "type": "uint256"
        }
      ],
      "name": "PrizesSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "RequestedRandomId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOfWinners",
          "type": "uint256"
        }
      ],
      "name": "UpdateWinnersEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NGO",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NGODonationPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "eventOutcome",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "thresholdInit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "thresholdEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockInit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolSize",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "betTeamA",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "betTeamB",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "betDraw",
              "type": "address[]"
            },
            {
              "internalType": "enum IProde.EventState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct IProde.Event",
          "name": "_event",
          "type": "tuple"
        }
      ],
      "name": "addEvent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "active",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "eventOutcome",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "thresholdInit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "thresholdEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockInit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blockEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "poolSize",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "betTeamA",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "betTeamB",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "betDraw",
              "type": "address[]"
            },
            {
              "internalType": "enum IProde.EventState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct IProde.Event[]",
          "name": "_events",
          "type": "tuple[]"
        }
      ],
      "name": "addEvents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "betAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimONG",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "claimPrize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "events",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "eventOutcome",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "thresholdInit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "thresholdEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockInit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "poolSize",
          "type": "uint256"
        },
        {
          "internalType": "enum IProde.EventState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "getEventWinners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNGOCurrentPoolPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalPoolSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hitters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isWinner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxEvents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minWinnerPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ngoPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum IProde.BetOdd",
          "name": "bet",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "betIds",
          "type": "uint256[]"
        },
        {
          "internalType": "enum IProde.BetOdd[]",
          "name": "bets",
          "type": "uint8[]"
        }
      ],
      "name": "placeBets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "pokeOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "requestOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newMinWinnerPoints",
          "type": "uint256"
        }
      ],
      "name": "setMinWinnerPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setPrizes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "startEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "stopEventBetWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        }
      ],
      "name": "updateResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersByEvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winners",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfd9d766db09dfc93a62aebd46209d7cdb8cdccb41da7d651398e70fe10d47bbd",
  "receipt": {
    "to": null,
    "from": "0x153073310327caA6abB76F735d115E5c8bA1617B",
    "contractAddress": "0x9e77Ec5425D19F5DD49DD4C21357Bb0ffFb41218",
    "transactionIndex": 0,
    "gasUsed": "2508823",
    "logsBloom": "0x
    "blockHash": "0xc994917d640cf3fcb132c0cd28ca64545162ce285d925651c85608c0280496a3",
    "transactionHash": "0xfd9d766db09dfc93a62aebd46209d7cdb8cdccb41da7d651398e70fe10d47bbd",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 5527871,
        "transactionHash": "0xfd9d766db09dfc93a62aebd46209d7cdb8cdccb41da7d651398e70fe10d47bbd",
        "address": "0x9e77Ec5425D19F5DD49DD4C21357Bb0ffFb41218",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000153073310327caa6abb76f735d115e5c8ba1617b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc994917d640cf3fcb132c0cd28ca64545162ce285d925651c85608c0280496a3"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 5527871,
        "transactionHash": "0xfd9d766db09dfc93a62aebd46209d7cdb8cdccb41da7d651398e70fe10d47bbd",
        "address": "0x9e77Ec5425D19F5DD49DD4C21357Bb0ffFb41218",
        "topics": [
          "0x05833d6a461f6403366adaf69ce01e8e4764cee17da114689a1a5c3f4e1b5bc2"
        ],
        "data": "0x000000000000000000000000620183085b03064be38529df28bf52ccf251f08400000000000000000000000058efdc4236465a87c996eb12751151a6084181f90000000000000000000000002e77379d26b40e70bae0eab873e333cb79f2803600000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000de0b6b3a7640000",
        "logIndex": 1,
        "blockHash": "0xc994917d640cf3fcb132c0cd28ca64545162ce285d925651c85608c0280496a3"
      }
    ],
    "blockNumber": 5527871,
    "cumulativeGasUsed": "2508823",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x620183085B03064BE38529Df28Bf52ccF251f084",
    "0x58eFdc4236465a87c996eb12751151a6084181f9",
    "0x2e77379d26b40e70bae0EAB873E333cB79f28036",
    100,
    1,
    10,
    "1000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "0ff830309781cfc465c08053b039f22d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ngo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ngoDonationPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxEvents\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minWinnerPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IProde.BetOdd\",\"name\":\"bet\",\"type\":\"uint8\"}],\"name\":\"BetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ngoPrize\",\"type\":\"uint256\"}],\"name\":\"ClaimNGO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ClaimPrize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockInit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockEnd\",\"type\":\"uint256\"}],\"name\":\"EventActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"EventBetsFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"EventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"result\",\"type\":\"uint8\"}],\"name\":\"EventOutcome\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"NGO\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"NGODonationPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxEvents\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minWinnerPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMinPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinPoints\",\"type\":\"uint256\"}],\"name\":\"MinWinnerPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ngoPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winnerPrize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmountToShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winners\",\"type\":\"uint256\"}],\"name\":\"PrizesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"RequestedRandomId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfWinners\",\"type\":\"uint256\"}],\"name\":\"UpdateWinnersEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NGO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NGODonationPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"eventOutcome\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"thresholdInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSize\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"betTeamA\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"betTeamB\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"betDraw\",\"type\":\"address[]\"},{\"internalType\":\"enum IProde.EventState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct IProde.Event\",\"name\":\"_event\",\"type\":\"tuple\"}],\"name\":\"addEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"eventOutcome\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"thresholdInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSize\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"betTeamA\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"betTeamB\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"betDraw\",\"type\":\"address[]\"},{\"internalType\":\"enum IProde.EventState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct IProde.Event[]\",\"name\":\"_events\",\"type\":\"tuple[]\"}],\"name\":\"addEvents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"betAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimONG\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"eventOutcome\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"thresholdInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"thresholdEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolSize\",\"type\":\"uint256\"},{\"internalType\":\"enum IProde.EventState\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"getEventWinners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNGOCurrentPoolPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalPoolSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hitters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWinnerPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ngoPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum IProde.BetOdd\",\"name\":\"bet\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"betIds\",\"type\":\"uint256[]\"},{\"internalType\":\"enum IProde.BetOdd[]\",\"name\":\"bets\",\"type\":\"uint8[]\"}],\"name\":\"placeBets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"pokeOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"requestOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinWinnerPoints\",\"type\":\"uint256\"}],\"name\":\"setMinWinnerPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPrizes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"startEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"stopEventBetWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"updateResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersByEvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEvents((bool,uint8,string,uint256,uint256,uint256,uint256,uint256,address[],address[],address[],uint8)[])\":{\"notice\":\"TODO SATURDAY \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Prodex.sol\":\"Prodex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/Prodex.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\nimport \\\"./interfaces/IProde.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\nimport \\\"hardhat/console.sol\\\";\\n\\ncontract Prodex is IProde, Ownable {\\n    using SafeERC20 for IERC20;\\n    using SafeMath for uint256;\\n    using Counters for Counters.Counter;\\n\\n    address public token;\\n    address public oracle;\\n    address public immutable NGO;\\n    uint256 public immutable NGODonationPercentage;\\n    uint256 public globalPoolSize;\\n    uint256 public immutable maxEvents;\\n    uint256 public minWinnerPoints;\\n    uint256 public winners;\\n    uint256 public winnerPrize;\\n    uint256 public ngoPrize;\\n    uint256 public immutable betAmount;\\n\\n    Counters.Counter private _eventIdCounter;\\n    Counters.Counter private _eventIdProcessedCounter;\\n\\n    mapping(address => uint256) public hitters;\\n    mapping(address => mapping(uint256 => bool)) public usersByEvent;\\n    mapping(uint256 => Event) public events;\\n\\n    modifier validEvent(uint256 eventId) {\\n        require(eventId <= maxEvents && events[eventId].active, \\\"INVALID EVENT ID OR NOT ACTIVE\\\");\\n        _;\\n    }\\n\\n    modifier validMaxEvents(uint256 eventId) {\\n        require(eventId <= maxEvents, \\\"EVENT IS GREATER THAN MAX EVENTS NUMBER\\\");\\n        _;\\n    }\\n\\n    modifier onlyOwnerOrNGO() {\\n        require(msg.sender == NGO || msg.sender == this.owner(), \\\"PRODEX: NOT NGO OR CONTRACT OWNER\\\");\\n        _;\\n    }\\n\\n    modifier ableToClaim() {\\n        require(_eventIdProcessedCounter.current() == maxEvents, \\\"PRODEX: ALL EVENTS MUST BE PROCESSED TO CLAIM PRIZE\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _token,\\n        address _ngo,\\n        address _oracle,\\n        uint256 _ngoDonationPercentage,\\n        uint256 _maxEvents,\\n        uint256 _minWinnerPoints,\\n        uint256 _betAmount\\n    ) {\\n        require(_token != address(0), \\\"INVALID TOKEN ADDRESS\\\");\\n        require(_ngo != address(0), \\\"INVALID NGO ADDRESS\\\");\\n        require(_oracle != address(0), \\\"INVALID ORACLE ADDRESS\\\");\\n        require(_minWinnerPoints > 0, \\\"INVALID MIN WINNER POINTS\\\");\\n        require(_betAmount > 0, \\\"INVALID BET AMOUNT\\\");\\n\\n        token = _token;\\n        NGO = _ngo;\\n        oracle = _oracle;\\n        NGODonationPercentage = _ngoDonationPercentage;\\n        maxEvents = _maxEvents;\\n        minWinnerPoints = _minWinnerPoints;\\n        betAmount = _betAmount;\\n        emit Initialized(token, NGO, oracle, NGODonationPercentage, maxEvents, minWinnerPoints, betAmount);\\n    }\\n\\n    /********** SETTERS ***********/\\n    function setMinWinnerPoints(uint256 _newMinWinnerPoints) external onlyOwner {\\n        require(_newMinWinnerPoints > 0, \\\"INVALID MIN WINNER POINTS\\\");\\n        uint256 oldMinnerPoints = _newMinWinnerPoints;\\n        minWinnerPoints = _newMinWinnerPoints;\\n        emit MinWinnerPointsUpdated(oldMinnerPoints, minWinnerPoints);\\n    }\\n\\n    /********** GETTERS ***********/\\n\\n    function getNGOCurrentPoolPrize() external view returns (uint256) {\\n        return globalPoolSize * (NGODonationPercentage / 100);\\n    }\\n\\n    /********** INTERFACE ***********/\\n\\n    function validateEventCreation(Event memory _event) internal view {\\n        require(_event.blockInit > block.number, \\\"PRODEX: INIT BLOCK MUST BE GREATER THAN CURRENT BLOCK\\\");\\n        require(_event.blockEnd > block.number, \\\"PRODEX: END BLOCK MUST BE GREATER THAN CURRENT BLOCK\\\");\\n        require(_event.blockEnd >= _event.blockInit, \\\"PRODEX: MATCH CANNOT END BEFORE MATCH INITIALIZATION\\\");\\n        require(_event.betTeamA.length == 0, \\\"PRODEX: MATCH CANNOT HAVE BETS ON INITIALIZATION\\\");\\n        require(_event.betTeamB.length == 0, \\\"PRODEX: MATCH CANNOT HAVE BETS ON INITIALIZATION\\\");\\n        require(_event.betDraw.length == 0, \\\"PRODEX: MATCH CANNOT HAVE BETS ON INITIALIZATION\\\");\\n    }\\n\\n    function addEvent(Event memory _event) external onlyOwner returns (uint256) {\\n        uint256 currentEventId = _eventIdCounter.current();\\n        require(currentEventId <= maxEvents, \\\"PRODEX: CANNOT ADD MORE EVENTS\\\");\\n        _eventIdCounter.increment();\\n        uint256 newEventId = _eventIdCounter.current();\\n        validateEventCreation(_event);\\n        _event.active = false;\\n        _event.poolSize = 0;\\n        _event.state = EventState.CREATED;\\n        events[newEventId] = _event;\\n        emit EventCreated(newEventId);\\n        return newEventId;\\n    }\\n\\n    /**TODO SATURDAY */\\n    function addEvents(Event[] memory _events) external onlyOwner {}\\n\\n    function startEvent(uint256 eventId) external validMaxEvents(eventId) {\\n        //require(\\n        //    block.number >= events[eventId].blockInit - events[eventId].thresholdInit,\\n        //    \\\"PRODEX: CANNOT INIT EVENT YET\\\"\\n        //);\\n        events[eventId].active = true;\\n        events[eventId].state = EventState.ACTIVE;\\n        emit EventActive(eventId, events[eventId].blockInit, events[eventId].blockEnd);\\n    }\\n\\n    function stopEventBetWindow(uint256 eventId) external validEvent(eventId) {\\n        require(block.number > events[eventId].blockInit, \\\"PRODEX: BETS ARE STILL AVAILABLE\\\");\\n        events[eventId].state = EventState.ORACLE;\\n        emit EventBetsFinished(eventId);\\n    }\\n\\n    function requestOracle(uint256 eventId) external validEvent(eventId) {\\n        IOracle(oracle).requestRandomNumber(eventId);\\n        emit RequestedRandomId(eventId);\\n    }\\n\\n    function pokeOracle(uint256 eventId) external validEvent(eventId) {\\n        require(events[eventId].state == EventState.ORACLE, \\\"PRODEX: EVENT STATE DOES NOT ALLOW TO POKE ORACLE\\\");\\n        require(\\n            block.number > events[eventId].blockEnd + events[eventId].thresholdEnd,\\n            \\\"PRODEX: IT IS NOT TIME TO POKE ORACLE YET\\\"\\n        );\\n\\n        uint8 eventResult = IOracle(oracle).getEventResult(eventId);\\n\\n        events[eventId].eventOutcome = eventResult;\\n        events[eventId].state = EventState.UPDATING;\\n        emit EventOutcome(eventId, eventResult);\\n    }\\n\\n    function getEventWinners(uint256 eventId) public view returns (address[] memory) {\\n        uint256 result = events[eventId].eventOutcome;\\n        if (result == 0) {\\n            return events[eventId].betTeamA;\\n        } else if (result == 1) {\\n            return events[eventId].betTeamB;\\n        } else {\\n            return events[eventId].betDraw;\\n        }\\n    }\\n\\n    function updateResults(uint256 eventId) external validEvent(eventId) {\\n        require(events[eventId].state == EventState.UPDATING);\\n        address[] memory eventWinners = getEventWinners(eventId);\\n        for (uint256 i = 0; i < eventWinners.length; i++) {\\n            hitters[eventWinners[i]] += 1;\\n            if (hitters[eventWinners[i]] >= minWinnerPoints) {\\n                winners++;\\n            }\\n        }\\n        events[eventId].state = EventState.FINISHED;\\n        events[eventId].active = false;\\n        _eventIdProcessedCounter.increment();\\n        emit UpdateWinnersEvent(eventId, eventWinners.length);\\n    }\\n\\n    function _placeBet(uint256 eventId, BetOdd bet) internal validEvent(eventId) {\\n        require(events[eventId].active, \\\"PRODEX: EVENT NOT ACTIVE\\\");\\n        //require(block.number <= events[eventId].blockInit, \\\"PRODEX: BET TIME EXPIRED\\\");\\n        require(usersByEvent[msg.sender][eventId] == false, \\\"PRODEX: USER CANNOT BET MORE THAN ONCE PER EVENT\\\");\\n        usersByEvent[msg.sender][eventId] = true;\\n        events[eventId].poolSize += betAmount;\\n        globalPoolSize += betAmount;\\n        if (bet == BetOdd.TEAM_A) {\\n            events[eventId].betTeamA.push(msg.sender);\\n        } else if (bet == BetOdd.TEAM_B) {\\n            events[eventId].betTeamB.push(msg.sender);\\n        } else {\\n            events[eventId].betDraw.push(msg.sender);\\n        }\\n        IERC20(token).safeTransferFrom(msg.sender, address(this), betAmount);\\n        emit BetPlaced(eventId, msg.sender, bet);\\n    }\\n\\n    function placeBet(uint256 eventId, BetOdd bet) external {\\n        _placeBet(eventId, bet);\\n    }\\n\\n    function placeBets(uint256[] memory betIds, BetOdd[] memory bets) external {\\n        for (uint256 i = 0; i < betIds.length; i++) {\\n            _placeBet(betIds[i], bets[i]);\\n        }\\n    }\\n\\n    function setPrizes() external {\\n        require(_eventIdProcessedCounter.current() == maxEvents, \\\"PRODEX: ALL EVENTS MUST BE PROCESSED TO SET PRIZES\\\");\\n        require(winners > 0, \\\"PRODEX: NO WINNERS\\\");\\n        uint256 percentage = 100 - NGODonationPercentage;\\n        uint256 usersTotalAmountToShare = globalPoolSize.mul(percentage).div(100);\\n\\n        winnerPrize = usersTotalAmountToShare / winners;\\n        ngoPrize = globalPoolSize - usersTotalAmountToShare;\\n        emit PrizesSet(ngoPrize, winnerPrize, usersTotalAmountToShare, winners);\\n    }\\n\\n    function claimPrize(address to) external ableToClaim {\\n        require(winnerPrize > 0, \\\"PRODEX: WINERPRIZE NOT SET\\\");\\n        require(hitters[msg.sender] >= minWinnerPoints, \\\"PRODEX: USER NOT ELEGIBLE TO CLAIM PRIZE\\\");\\n        IERC20(token).safeTransfer(to, winnerPrize);\\n        hitters[msg.sender] = 0;\\n        emit ClaimPrize(msg.sender, to);\\n    }\\n\\n    function claimONG() external onlyOwnerOrNGO ableToClaim {\\n        IERC20(token).safeTransfer(NGO, ngoPrize);\\n        emit ClaimNGO(ngoPrize);\\n    }\\n\\n    function isWinner(address user) external view returns (bool) {\\n        require(user != address(0), \\\"PRODEX: INVALID ADDRESS\\\");\\n        if (hitters[user] >= minWinnerPoints) {\\n            return true;\\n        }\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0xf40ab73b340eef40877f79173a98b7767caff3628a76f09a144003360e46347e\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IOracle {\\n  function getEventResult(uint256 eventId) external returns (uint8);\\n  function requestRandomNumber(uint256 eventId) external;\\n  function isRequestComplete(uint32 requestId) external view  returns (bool isCompleted);\\n  }\\n\",\"keccak256\":\"0x9597b316493ab41121862e5c21b07a18a1338604a8d8a8a6501f171ac3677aa9\",\"license\":\"MIT\"},\"contracts/interfaces/IProde.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface IProde {\\n    struct Event {\\n        bool active;\\n        uint8 eventOutcome;\\n        string name;\\n        uint256 thresholdInit;\\n        uint256 thresholdEnd;\\n        uint256 blockInit;\\n        uint256 blockEnd;\\n        uint256 poolSize;\\n        address[] betTeamA;\\n        address[] betTeamB;\\n        address[] betDraw;\\n        EventState state;\\n    }\\n\\n    enum EventState {\\n        CREATED,\\n        ACTIVE,\\n        ORACLE,\\n        UPDATING,\\n        FINISHED\\n    }\\n\\n    enum BetOdd {\\n        TEAM_A,\\n        DRAW,\\n        TEAM_B\\n    }\\n\\n    event Initialized(\\n        address token,\\n        address NGO,\\n        address oracle,\\n        uint256 NGODonationPercentage,\\n        uint256 maxEvents,\\n        uint256 minWinnerPoints,\\n        uint256 betAmount\\n    );\\n    event MinWinnerPointsUpdated(uint256 oldMinPoints, uint256 newMinPoints);\\n    event EventCreated(uint256 eventId);\\n    event EventActive(uint256 eventId, uint256 blockInit, uint256 blockEnd);\\n    event BetPlaced(uint256 eventId, address indexed who, BetOdd bet);\\n    event EventBetsFinished(uint256 eventId);\\n    event EventOutcome(uint256 eventId, uint8 result);\\n    event UpdateWinnersEvent(uint256 eventId, uint256 amountOfWinners);\\n    event ClaimPrize(address indexed who, address indexed to);\\n    event PrizesSet(uint256 ngoPrize, uint256 winnerPrize, uint256 totalAmountToShare, uint256 winners);\\n    event ClaimNGO(uint256 ngoPrize);\\n    event RequestedRandomId(uint256 eventId);\\n\\n\\n    /********** SETTERS ***********/\\n    function setMinWinnerPoints(uint256 _newMinWinnerPoints) external;\\n\\n    /********** GETTERS ***********/\\n\\n    function getNGOCurrentPoolPrize() external view returns (uint256);\\n\\n    /********** INTERFACE ***********/\\n\\n    function addEvent(Event memory _event) external returns (uint256);\\n\\n    /**TODO SATURDAY */\\n    function addEvents(Event[] memory _events) external;\\n\\n    function startEvent(uint256 eventId) external;\\n\\n    function stopEventBetWindow(uint256 eventId) external;\\n\\n    function pokeOracle(uint256 eventId) external;\\n\\n    function updateResults(uint256 eventId) external;\\n\\n    function getEventWinners(uint256 eventId) external view returns (address[] memory);\\n\\n    function placeBet(uint256 eventId, BetOdd bet) external;\\n\\n    function setPrizes() external;\\n\\n    function claimPrize(address to) external;\\n\\n    function claimONG() external;\\n\\n    function isWinner(address user) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x522246d3e65c7f41abc92db5edf65f431483ad0cc0423350999c507901402e29\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b5060405162002ebd38038062002ebd833981016040819052620000359162000304565b620000403362000297565b6001600160a01b0387166200009c5760405162461bcd60e51b815260206004820152601560248201527f494e56414c494420544f4b454e2041444452455353000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038616620000f45760405162461bcd60e51b815260206004820152601360248201527f494e56414c4944204e474f204144445245535300000000000000000000000000604482015260640162000093565b6001600160a01b0385166200014c5760405162461bcd60e51b815260206004820152601660248201527f494e56414c4944204f5241434c45204144445245535300000000000000000000604482015260640162000093565b600082116200019e5760405162461bcd60e51b815260206004820152601960248201527f494e56414c4944204d494e2057494e4e455220504f494e545300000000000000604482015260640162000093565b60008111620001e55760405162461bcd60e51b8152602060048201526012602482015271125395905312510810915508105353d5539560721b604482015260640162000093565b600180546001600160a01b038981166001600160a01b03199283168117909355888116608081815260028054938b1693909416831790935560a088815260c0888152600488905560e0878152604080519788526020880194909452928601939093526060850189905292840187905291830185905282018390527f05833d6a461f6403366adaf69ce01e8e4764cee17da114689a1a5c3f4e1b5bc2910160405180910390a15050505050505062000375565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002ff57600080fd5b919050565b600080600080600080600060e0888a0312156200032057600080fd5b6200032b88620002e7565b96506200033b60208901620002e7565b95506200034b60408901620002e7565b9450606088015193506080880151925060a0880151915060c0880151905092959891949750929550565b60805160a05160c05160e051612a97620004266000396000818161045901528181611b2901528181611b5e0152611c7a01526000818161029a01528181610503015281816109b101528181610d4b01528181610e9601528181610f8b01528181611093015281816112ed015281816114d10152818161164001526119bc0152600081816102f0015281816113cb015261149901526000818161037701528181610c460152610da80152612a976000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063937d7f111161011a578063bddb5def116100ad578063e32d7b1b1161007c578063e32d7b1b14610496578063e5e9b6611461049e578063eb076461146104b1578063f2fde38b146104c4578063fc0c546a146104d757600080fd5b8063bddb5def14610441578063d24257c014610454578063d48bf1431461047b578063deb7f5801461048357600080fd5b8063a487bcd8116100e9578063a487bcd8146103f2578063a59a6953146103fb578063a62863a81461040e578063b8cf1d171461042157600080fd5b8063937d7f11146103725780639bfe5807146103995780639d9ca28d146103a1578063a13dc4a3146103c457600080fd5b806363bcda2911610192578063715018a611610161578063715018a6146103255780637dc0d1d01461032d5780638da5cb5b146103585780638e7d5ccc1461036957600080fd5b806363bcda29146102cf578063644679d3146102e2578063662c0fb1146102eb5780636f8784e11461031257600080fd5b80631d0f6de9116101ce5780631d0f6de9146102835780632017aa2f1461028c5780634f0a3ffa146102955780635180883d146102bc57600080fd5b8063018091ce1461020057806303edf914146102265780630b7914301461023b5780630fb5990814610263575b600080fd5b61021361020e36600461242d565b6104ea565b6040519081526020015b60405180910390f35b610239610234366004612471565b6106f1565b005b61024e61024936600461249d565b6106ff565b60405161021d99989796959493929190612524565b61027661027136600461249d565b6107db565b60405161021d919061258f565b61021360075481565b61021360065481565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102396102ca36600461263e565b61094f565b6102396102dd36600461249d565b6109ae565b61021360035481565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b61023961032036600461249d565b610b8a565b610239610c27565b600254610340906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b6000546001600160a01b0316610340565b61021360045481565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b610239610c3b565b6103b46103af3660046126f7565b610e0a565b604051901515815260200161021d565b6103b46103d2366004612714565b600b60209081526000928352604080842090915290825290205460ff1681565b61021360055481565b61023961040936600461249d565b610e93565b61023961041c36600461249d565b610f88565b61021361042f3660046126f7565b600a6020526000908152604090205481565b61023961044f36600461249d565b611090565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102396112eb565b610239610491366004612740565b611485565b610213611490565b6102396104ac3660046126f7565b6114cf565b6102396104bf36600461249d565b61163d565b6102396104d23660046126f7565b611727565b600154610340906001600160a01b031681565b60006104f461179d565b60006104ff60085490565b90507f00000000000000000000000000000000000000000000000000000000000000008111156105765760405162461bcd60e51b815260206004820152601e60248201527f50524f4445583a2043414e4e4f5420414444204d4f5245204556454e5453000060448201526064015b60405180910390fd5b610584600880546001019055565b600061058f60085490565b905061059a846117f7565b600080855260e085018190526101608501819052506000818152600c6020908152604091829020865181548389015160ff166101000261ff00199215159290921661ffff1990911617178155918601518051879392610600926001850192910190612049565b50606082015160028201556080820151600382015560a0820151600482015560c0820151600582015560e08201516006820155610100820151805161064f9160078401916020909101906120cd565b50610120820151805161066c9160088401916020909101906120cd565b5061014082015180516106899160098401916020909101906120cd565b50610160820151600a8201805460ff191660018360048111156106ae576106ae61250e565b0217905550506040518281527f748ff5cfd7b66bdd8e21581c2a864756fe7085378c0003183e579bfafba28325915060200160405180910390a19150505b919050565b6106fb82826119b9565b5050565b600c602052600090815260409020805460018201805460ff808416946101009094041692919061072e906127f1565b80601f016020809104026020016040519081016040528092919081815260200182805461075a906127f1565b80156107a75780601f1061077c576101008083540402835291602001916107a7565b820191906000526020600020905b81548152906001019060200180831161078a57829003601f168201915b50505060028401546003850154600486015460058701546006880154600a9098015496979396929550909350919060ff1689565b6000818152600c6020526040902054606090610100900460ff1680610868576000838152600c60209081526040918290206007018054835181840281018401909452808452909183018282801561085b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161083d575b5050505050915050919050565b80600114156108dd576000838152600c60209081526040918290206008018054835181840281018401909452808452909183018282801561085b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161083d575050505050915050919050565b6000838152600c60209081526040918290206009018054835181840281018401909452808452909183018282801561085b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161083d575050505050915050919050565b50919050565b60005b82518110156109a95761099783828151811061097057610970612826565b602002602001015183838151811061098a5761098a612826565b60200260200101516119b9565b806109a181612852565b915050610952565b505050565b807f000000000000000000000000000000000000000000000000000000000000000081111580156109ed57506000818152600c602052604090205460ff165b610a095760405162461bcd60e51b815260040161056d9061286d565b60036000838152600c60205260409020600a015460ff166004811115610a3157610a3161250e565b14610a3b57600080fd5b6000610a46836107db565b905060005b8151811015610b19576001600a6000848481518110610a6c57610a6c612826565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610aa391906128a4565b92505081905550600454600a6000848481518110610ac357610ac3612826565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205410610b075760058054906000610b0183612852565b91905055505b80610b1181612852565b915050610a4b565b506000838152600c60205260409020600a8101805460ff19908116600417909155815416905560098054600101905580516040805185815260208101929092527ffcda307a899d09c000f956ef8043cc643f341cd56a5d5b9d14dc50800014bbbf91015b60405180910390a1505050565b610b9261179d565b60008111610be25760405162461bcd60e51b815260206004820152601960248201527f494e56414c4944204d494e2057494e4e455220504f494e545300000000000000604482015260640161056d565b6004819055604080518281526020810183905282917fdbbc0a1afd7b8c69afab2bfa10dc6b361a85d5d24feab70d0a0b60ee9b52409991015b60405180910390a15050565b610c2f61179d565b610c396000611ce6565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cf35750306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca657600080fd5b505afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde91906128bc565b6001600160a01b0316336001600160a01b0316145b610d495760405162461bcd60e51b815260206004820152602160248201527f50524f4445583a204e4f54204e474f204f5220434f4e5452414354204f574e456044820152602960f91b606482015260840161056d565b7f0000000000000000000000000000000000000000000000000000000000000000610d7360095490565b14610d905760405162461bcd60e51b815260040161056d906128d9565b600754600154610dcd916001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000090611d36565b7fdd3ff36cd65aa18ad7b2f7f860b71048c171b35a5b470c8c188abaf345db6752600754604051610e0091815260200190565b60405180910390a1565b60006001600160a01b038216610e625760405162461bcd60e51b815260206004820152601760248201527f50524f4445583a20494e56414c49442041444452455353000000000000000000604482015260640161056d565b6004546001600160a01b0383166000908152600a602052604090205410610e8b57506001919050565b506000919050565b807f0000000000000000000000000000000000000000000000000000000000000000811115610f145760405162461bcd60e51b815260206004820152602760248201527f4556454e542049532047524541544552205448414e204d4158204556454e545360448201526610272aa6a122a960c91b606482015260840161056d565b6000828152600c60209081526040918290208054600160ff1991821681178355600a830180549092161790556004810154600590910154835186815292830191909152918101919091527f809e0371ce4656ff03837f283d2a15eb489a2cb6c8ab78f9a3fb530382ac937290606001610c1b565b807f00000000000000000000000000000000000000000000000000000000000000008111158015610fc757506000818152600c602052604090205460ff165b610fe35760405162461bcd60e51b815260040161056d9061286d565b6000828152600c602052604090206004015443116110435760405162461bcd60e51b815260206004820181905260248201527f50524f4445583a204245545320415245205354494c4c20415641494c41424c45604482015260640161056d565b6000828152600c6020908152604091829020600a01805460ff1916600217905590518381527f10e025aa48a4e29ce69517c168b6bc06b4d5557de0881408559617166b97c9379101610c1b565b807f000000000000000000000000000000000000000000000000000000000000000081111580156110cf57506000818152600c602052604090205460ff165b6110eb5760405162461bcd60e51b815260040161056d9061286d565b60026000838152600c60205260409020600a015460ff1660048111156111135761111361250e565b1461117a5760405162461bcd60e51b815260206004820152603160248201527f50524f4445583a204556454e5420535441544520444f4553204e4f5420414c4c6044820152704f5720544f20504f4b45204f5241434c4560781b606482015260840161056d565b6000828152600c60205260409020600381015460059091015461119d91906128a4565b43116111fd5760405162461bcd60e51b815260206004820152602960248201527f50524f4445583a204954204953204e4f542054494d4520544f20504f4b45204f604482015268149050d3114816515560ba1b606482015260840161056d565b60025460405163c60d2d8f60e01b8152600481018490526000916001600160a01b03169063c60d2d8f90602401602060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c919061292c565b6000848152600c60205260409020805461ff00191661010060ff841602178155600a01805491925060039160ff191660018302179055506040805184815260ff831660208201527fa5c0ca580aac8c1d6965dc5f2c4610296fa04c70daf0fa2b77cd2bd1a05ce4499101610b7d565b7f000000000000000000000000000000000000000000000000000000000000000061131560095490565b1461137d5760405162461bcd60e51b815260206004820152603260248201527f50524f4445583a20414c4c204556454e5453204d5553542042452050524f43456044820152715353454420544f20534554205052495a455360701b606482015260840161056d565b6000600554116113c45760405162461bcd60e51b815260206004820152601260248201527150524f4445583a204e4f2057494e4e45525360701b604482015260640161056d565b60006113f17f00000000000000000000000000000000000000000000000000000000000000006064612949565b90506000611415606461140f84600354611d9990919063ffffffff16565b90611dac565b9050600554816114259190612960565b600655600354611436908290612949565b600781905560065460055460408051938452602084019290925290820183905260608201527fb5f42caf22528a8a83e8e0252f5b55b8a28bdbd78000b04b6f516f742892f00490608001610c1b565b61148d61179d565b50565b60006114bd60647f0000000000000000000000000000000000000000000000000000000000000000612960565b6003546114ca9190612982565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006114f960095490565b146115165760405162461bcd60e51b815260040161056d906128d9565b6000600654116115685760405162461bcd60e51b815260206004820152601a60248201527f50524f4445583a2057494e45525052495a45204e4f5420534554000000000000604482015260640161056d565b600454336000908152600a602052604090205410156115da5760405162461bcd60e51b815260206004820152602860248201527f50524f4445583a2055534552204e4f5420454c454749424c4520544f20434c41604482015267494d205052495a4560c01b606482015260840161056d565b6006546001546115f7916001600160a01b03909116908390611d36565b336000818152600a6020526040808220829055516001600160a01b03841692917f4863e8ddbb1d47b2d2751f70a49813cf77503f5e78317defca7727512c95cd9c91a350565b807f0000000000000000000000000000000000000000000000000000000000000000811115801561167c57506000818152600c602052604090205460ff165b6116985760405162461bcd60e51b815260040161056d9061286d565b60025460405163b1eb96c960e01b8152600481018490526001600160a01b039091169063b1eb96c990602401600060405180830381600087803b1580156116de57600080fd5b505af11580156116f2573d6000803e3d6000fd5b505050507f52364007fb5377899732c611e5618a16d94c694e5b7267df99d0ec326d0a457282604051610c1b91815260200190565b61172f61179d565b6001600160a01b0381166117945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056d565b61148d81611ce6565b6000546001600160a01b03163314610c395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b438160a00151116118685760405162461bcd60e51b815260206004820152603560248201527f50524f4445583a20494e495420424c4f434b204d5553542042452047524541546044820152744552205448414e2043555252454e5420424c4f434b60581b606482015260840161056d565b438160c00151116118d85760405162461bcd60e51b815260206004820152603460248201527f50524f4445583a20454e4420424c4f434b204d5553542042452047524541544560448201527352205448414e2043555252454e5420424c4f434b60601b606482015260840161056d565b8060a001518160c00151101561194d5760405162461bcd60e51b815260206004820152603460248201527f50524f4445583a204d415443482043414e4e4f5420454e44204245464f52452060448201527326a0aa21a41024a724aa24a0a624ad20aa24a7a760611b606482015260840161056d565b61010081015151156119715760405162461bcd60e51b815260040161056d906129a1565b61012081015151156119955760405162461bcd60e51b815260040161056d906129a1565b610140810151511561148d5760405162461bcd60e51b815260040161056d906129a1565b817f000000000000000000000000000000000000000000000000000000000000000081111580156119f857506000818152600c602052604090205460ff165b611a145760405162461bcd60e51b815260040161056d9061286d565b6000838152600c602052604090205460ff16611a725760405162461bcd60e51b815260206004820152601860248201527f50524f4445583a204556454e54204e4f54204143544956450000000000000000604482015260640161056d565b336000908152600b6020908152604080832086845290915290205460ff1615611af65760405162461bcd60e51b815260206004820152603060248201527f50524f4445583a20555345522043414e4e4f5420424554204d4f52452054484160448201526f138813d390d14814115488115591539560821b606482015260840161056d565b336000908152600b602090815260408083208684528252808320805460ff19166001179055600c909152812060060180547f00000000000000000000000000000000000000000000000000000000000000009290611b559084906128a4565b925050819055507f000000000000000000000000000000000000000000000000000000000000000060036000828254611b8e91906128a4565b9091555060009050826002811115611ba857611ba861250e565b1415611be4576000838152600c602090815260408220600701805460018101825590835291200180546001600160a01b03191633179055611c66565b6002826002811115611bf857611bf861250e565b1415611c34576000838152600c602090815260408220600801805460018101825590835291200180546001600160a01b03191633179055611c66565b6000838152600c602090815260408220600901805460018101825590835291200180546001600160a01b031916331790555b600154611c9e906001600160a01b031633307f0000000000000000000000000000000000000000000000000000000000000000611db8565b336001600160a01b03167fae6991a793b64f1a31dee76253261982129a7ce5af34688cabe35ae7ad44e29e8484604051611cd99291906129f1565b60405180910390a2505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526109a990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611df6565b6000611da58284612982565b9392505050565b6000611da58284612960565b6040516001600160a01b0380851660248301528316604482015260648101829052611df09085906323b872dd60e01b90608401611d62565b50505050565b6000611e4b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ec89092919063ffffffff16565b8051909150156109a95780806020019051810190611e699190612a15565b6109a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161056d565b6060611ed78484600085611edf565b949350505050565b606082471015611f405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161056d565b6001600160a01b0385163b611f975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b600080866001600160a01b03168587604051611fb39190612a32565b60006040518083038185875af1925050503d8060008114611ff0576040519150601f19603f3d011682016040523d82523d6000602084013e611ff5565b606091505b5091509150612005828286612010565b979650505050505050565b6060831561201f575081611da5565b82511561202f5782518084602001fd5b8160405162461bcd60e51b815260040161056d9190612a4e565b828054612055906127f1565b90600052602060002090601f01602090048101928261207757600085556120bd565b82601f1061209057805160ff19168380011785556120bd565b828001600101855582156120bd579182015b828111156120bd5782518255916020019190600101906120a2565b506120c9929150612122565b5090565b8280548282559060005260206000209081019282156120bd579160200282015b828111156120bd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906120ed565b5b808211156120c95760008155600101612123565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561217157612171612137565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156121a0576121a0612137565b604052919050565b801515811461148d57600080fd5b80356106ec816121a8565b60ff8116811461148d57600080fd5b80356106ec816121c1565b600082601f8301126121ec57600080fd5b813567ffffffffffffffff81111561220657612206612137565b612219601f8201601f1916602001612177565b81815284602083860101111561222e57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561226557612265612137565b5060051b60200190565b6001600160a01b038116811461148d57600080fd5b600082601f83011261229557600080fd5b813560206122aa6122a58361224b565b612177565b82815260059290921b840181019181810190868411156122c957600080fd5b8286015b848110156122ed5780356122e08161226f565b83529183019183016122cd565b509695505050505050565b8035600581106106ec57600080fd5b6000610180828403121561231a57600080fd5b61232261214d565b905061232d826121b6565b815261233b602083016121d0565b6020820152604082013567ffffffffffffffff8082111561235b57600080fd5b612367858386016121db565b6040840152606084013560608401526080840135608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156123b457600080fd5b6123c086828701612284565b8385015250610120915081840135818111156123db57600080fd5b6123e786828701612284565b83850152506101409150818401358181111561240257600080fd5b61240e86828701612284565b838501525050506101606124238184016122f8565b9082015292915050565b60006020828403121561243f57600080fd5b813567ffffffffffffffff81111561245657600080fd5b611ed784828501612307565b8035600381106106ec57600080fd5b6000806040838503121561248457600080fd5b8235915061249460208401612462565b90509250929050565b6000602082840312156124af57600080fd5b5035919050565b60005b838110156124d15781810151838201526020016124b9565b83811115611df05750506000910152565b600081518084526124fa8160208601602086016124b6565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101208b1515835260ff8b1660208401528060408401526125498184018b6124e2565b9150508760608301528660808301528560a08301528460c08301528360e08301526005831061257a5761257a61250e565b826101008301529a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156125d05783516001600160a01b0316835292840192918401916001016125ab565b50909695505050505050565b600082601f8301126125ed57600080fd5b813560206125fd6122a58361224b565b82815260059290921b8401810191818101908684111561261c57600080fd5b8286015b848110156122ed5761263181612462565b8352918301918301612620565b6000806040838503121561265157600080fd5b823567ffffffffffffffff8082111561266957600080fd5b818501915085601f83011261267d57600080fd5b8135602061268d6122a58361224b565b82815260059290921b840181019181810190898411156126ac57600080fd5b948201945b838610156126ca578535825294820194908201906126b1565b965050860135925050808211156126e057600080fd5b506126ed858286016125dc565b9150509250929050565b60006020828403121561270957600080fd5b8135611da58161226f565b6000806040838503121561272757600080fd5b82356127328161226f565b946020939093013593505050565b6000602080838503121561275357600080fd5b823567ffffffffffffffff8082111561276b57600080fd5b818501915085601f83011261277f57600080fd5b813561278d6122a58261224b565b81815260059190911b830184019084810190888311156127ac57600080fd5b8585015b838110156127e4578035858111156127c85760008081fd5b6127d68b89838a0101612307565b8452509186019186016127b0565b5098975050505050505050565b600181811c9082168061280557607f821691505b6020821081141561094957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128665761286661283c565b5060010190565b6020808252601e908201527f494e56414c4944204556454e54204944204f52204e4f54204143544956450000604082015260600190565b600082198211156128b7576128b761283c565b500190565b6000602082840312156128ce57600080fd5b8151611da58161226f565b60208082526033908201527f50524f4445583a20414c4c204556454e5453204d5553542042452050524f43456040820152725353454420544f20434c41494d205052495a4560681b606082015260800190565b60006020828403121561293e57600080fd5b8151611da5816121c1565b60008282101561295b5761295b61283c565b500390565b60008261297d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561299c5761299c61283c565b500290565b60208082526030908201527f50524f4445583a204d415443482043414e4e4f5420484156452042455453204f60408201526f271024a724aa24a0a624ad20aa24a7a760811b606082015260800190565b8281526040810160038310612a0857612a0861250e565b8260208301529392505050565b600060208284031215612a2757600080fd5b8151611da5816121a8565b60008251612a448184602087016124b6565b9190910192915050565b602081526000611da560208301846124e256fea2646970667358221220643e24c5473ca9ae679fd5e513757d7a26113e35945ac3efa8217e6dee4ba4ab64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063937d7f111161011a578063bddb5def116100ad578063e32d7b1b1161007c578063e32d7b1b14610496578063e5e9b6611461049e578063eb076461146104b1578063f2fde38b146104c4578063fc0c546a146104d757600080fd5b8063bddb5def14610441578063d24257c014610454578063d48bf1431461047b578063deb7f5801461048357600080fd5b8063a487bcd8116100e9578063a487bcd8146103f2578063a59a6953146103fb578063a62863a81461040e578063b8cf1d171461042157600080fd5b8063937d7f11146103725780639bfe5807146103995780639d9ca28d146103a1578063a13dc4a3146103c457600080fd5b806363bcda2911610192578063715018a611610161578063715018a6146103255780637dc0d1d01461032d5780638da5cb5b146103585780638e7d5ccc1461036957600080fd5b806363bcda29146102cf578063644679d3146102e2578063662c0fb1146102eb5780636f8784e11461031257600080fd5b80631d0f6de9116101ce5780631d0f6de9146102835780632017aa2f1461028c5780634f0a3ffa146102955780635180883d146102bc57600080fd5b8063018091ce1461020057806303edf914146102265780630b7914301461023b5780630fb5990814610263575b600080fd5b61021361020e36600461242d565b6104ea565b6040519081526020015b60405180910390f35b610239610234366004612471565b6106f1565b005b61024e61024936600461249d565b6106ff565b60405161021d99989796959493929190612524565b61027661027136600461249d565b6107db565b60405161021d919061258f565b61021360075481565b61021360065481565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102396102ca36600461263e565b61094f565b6102396102dd36600461249d565b6109ae565b61021360035481565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b61023961032036600461249d565b610b8a565b610239610c27565b600254610340906001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b6000546001600160a01b0316610340565b61021360045481565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b610239610c3b565b6103b46103af3660046126f7565b610e0a565b604051901515815260200161021d565b6103b46103d2366004612714565b600b60209081526000928352604080842090915290825290205460ff1681565b61021360055481565b61023961040936600461249d565b610e93565b61023961041c36600461249d565b610f88565b61021361042f3660046126f7565b600a6020526000908152604090205481565b61023961044f36600461249d565b611090565b6102137f000000000000000000000000000000000000000000000000000000000000000081565b6102396112eb565b610239610491366004612740565b611485565b610213611490565b6102396104ac3660046126f7565b6114cf565b6102396104bf36600461249d565b61163d565b6102396104d23660046126f7565b611727565b600154610340906001600160a01b031681565b60006104f461179d565b60006104ff60085490565b90507f00000000000000000000000000000000000000000000000000000000000000008111156105765760405162461bcd60e51b815260206004820152601e60248201527f50524f4445583a2043414e4e4f5420414444204d4f5245204556454e5453000060448201526064015b60405180910390fd5b610584600880546001019055565b600061058f60085490565b905061059a846117f7565b600080855260e085018190526101608501819052506000818152600c6020908152604091829020865181548389015160ff166101000261ff00199215159290921661ffff1990911617178155918601518051879392610600926001850192910190612049565b50606082015160028201556080820151600382015560a0820151600482015560c0820151600582015560e08201516006820155610100820151805161064f9160078401916020909101906120cd565b50610120820151805161066c9160088401916020909101906120cd565b5061014082015180516106899160098401916020909101906120cd565b50610160820151600a8201805460ff191660018360048111156106ae576106ae61250e565b0217905550506040518281527f748ff5cfd7b66bdd8e21581c2a864756fe7085378c0003183e579bfafba28325915060200160405180910390a19150505b919050565b6106fb82826119b9565b5050565b600c602052600090815260409020805460018201805460ff808416946101009094041692919061072e906127f1565b80601f016020809104026020016040519081016040528092919081815260200182805461075a906127f1565b80156107a75780601f1061077c576101008083540402835291602001916107a7565b820191906000526020600020905b81548152906001019060200180831161078a57829003601f168201915b50505060028401546003850154600486015460058701546006880154600a9098015496979396929550909350919060ff1689565b6000818152600c6020526040902054606090610100900460ff1680610868576000838152600c60209081526040918290206007018054835181840281018401909452808452909183018282801561085b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161083d575b5050505050915050919050565b80600114156108dd576000838152600c60209081526040918290206008018054835181840281018401909452808452909183018282801561085b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161083d575050505050915050919050565b6000838152600c60209081526040918290206009018054835181840281018401909452808452909183018282801561085b576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161083d575050505050915050919050565b50919050565b60005b82518110156109a95761099783828151811061097057610970612826565b602002602001015183838151811061098a5761098a612826565b60200260200101516119b9565b806109a181612852565b915050610952565b505050565b807f000000000000000000000000000000000000000000000000000000000000000081111580156109ed57506000818152600c602052604090205460ff165b610a095760405162461bcd60e51b815260040161056d9061286d565b60036000838152600c60205260409020600a015460ff166004811115610a3157610a3161250e565b14610a3b57600080fd5b6000610a46836107db565b905060005b8151811015610b19576001600a6000848481518110610a6c57610a6c612826565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610aa391906128a4565b92505081905550600454600a6000848481518110610ac357610ac3612826565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205410610b075760058054906000610b0183612852565b91905055505b80610b1181612852565b915050610a4b565b506000838152600c60205260409020600a8101805460ff19908116600417909155815416905560098054600101905580516040805185815260208101929092527ffcda307a899d09c000f956ef8043cc643f341cd56a5d5b9d14dc50800014bbbf91015b60405180910390a1505050565b610b9261179d565b60008111610be25760405162461bcd60e51b815260206004820152601960248201527f494e56414c4944204d494e2057494e4e455220504f494e545300000000000000604482015260640161056d565b6004819055604080518281526020810183905282917fdbbc0a1afd7b8c69afab2bfa10dc6b361a85d5d24feab70d0a0b60ee9b52409991015b60405180910390a15050565b610c2f61179d565b610c396000611ce6565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610cf35750306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ca657600080fd5b505afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde91906128bc565b6001600160a01b0316336001600160a01b0316145b610d495760405162461bcd60e51b815260206004820152602160248201527f50524f4445583a204e4f54204e474f204f5220434f4e5452414354204f574e456044820152602960f91b606482015260840161056d565b7f0000000000000000000000000000000000000000000000000000000000000000610d7360095490565b14610d905760405162461bcd60e51b815260040161056d906128d9565b600754600154610dcd916001600160a01b03909116907f000000000000000000000000000000000000000000000000000000000000000090611d36565b7fdd3ff36cd65aa18ad7b2f7f860b71048c171b35a5b470c8c188abaf345db6752600754604051610e0091815260200190565b60405180910390a1565b60006001600160a01b038216610e625760405162461bcd60e51b815260206004820152601760248201527f50524f4445583a20494e56414c49442041444452455353000000000000000000604482015260640161056d565b6004546001600160a01b0383166000908152600a602052604090205410610e8b57506001919050565b506000919050565b807f0000000000000000000000000000000000000000000000000000000000000000811115610f145760405162461bcd60e51b815260206004820152602760248201527f4556454e542049532047524541544552205448414e204d4158204556454e545360448201526610272aa6a122a960c91b606482015260840161056d565b6000828152600c60209081526040918290208054600160ff1991821681178355600a830180549092161790556004810154600590910154835186815292830191909152918101919091527f809e0371ce4656ff03837f283d2a15eb489a2cb6c8ab78f9a3fb530382ac937290606001610c1b565b807f00000000000000000000000000000000000000000000000000000000000000008111158015610fc757506000818152600c602052604090205460ff165b610fe35760405162461bcd60e51b815260040161056d9061286d565b6000828152600c602052604090206004015443116110435760405162461bcd60e51b815260206004820181905260248201527f50524f4445583a204245545320415245205354494c4c20415641494c41424c45604482015260640161056d565b6000828152600c6020908152604091829020600a01805460ff1916600217905590518381527f10e025aa48a4e29ce69517c168b6bc06b4d5557de0881408559617166b97c9379101610c1b565b807f000000000000000000000000000000000000000000000000000000000000000081111580156110cf57506000818152600c602052604090205460ff165b6110eb5760405162461bcd60e51b815260040161056d9061286d565b60026000838152600c60205260409020600a015460ff1660048111156111135761111361250e565b1461117a5760405162461bcd60e51b815260206004820152603160248201527f50524f4445583a204556454e5420535441544520444f4553204e4f5420414c4c6044820152704f5720544f20504f4b45204f5241434c4560781b606482015260840161056d565b6000828152600c60205260409020600381015460059091015461119d91906128a4565b43116111fd5760405162461bcd60e51b815260206004820152602960248201527f50524f4445583a204954204953204e4f542054494d4520544f20504f4b45204f604482015268149050d3114816515560ba1b606482015260840161056d565b60025460405163c60d2d8f60e01b8152600481018490526000916001600160a01b03169063c60d2d8f90602401602060405180830381600087803b15801561124457600080fd5b505af1158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c919061292c565b6000848152600c60205260409020805461ff00191661010060ff841602178155600a01805491925060039160ff191660018302179055506040805184815260ff831660208201527fa5c0ca580aac8c1d6965dc5f2c4610296fa04c70daf0fa2b77cd2bd1a05ce4499101610b7d565b7f000000000000000000000000000000000000000000000000000000000000000061131560095490565b1461137d5760405162461bcd60e51b815260206004820152603260248201527f50524f4445583a20414c4c204556454e5453204d5553542042452050524f43456044820152715353454420544f20534554205052495a455360701b606482015260840161056d565b6000600554116113c45760405162461bcd60e51b815260206004820152601260248201527150524f4445583a204e4f2057494e4e45525360701b604482015260640161056d565b60006113f17f00000000000000000000000000000000000000000000000000000000000000006064612949565b90506000611415606461140f84600354611d9990919063ffffffff16565b90611dac565b9050600554816114259190612960565b600655600354611436908290612949565b600781905560065460055460408051938452602084019290925290820183905260608201527fb5f42caf22528a8a83e8e0252f5b55b8a28bdbd78000b04b6f516f742892f00490608001610c1b565b61148d61179d565b50565b60006114bd60647f0000000000000000000000000000000000000000000000000000000000000000612960565b6003546114ca9190612982565b905090565b7f00000000000000000000000000000000000000000000000000000000000000006114f960095490565b146115165760405162461bcd60e51b815260040161056d906128d9565b6000600654116115685760405162461bcd60e51b815260206004820152601a60248201527f50524f4445583a2057494e45525052495a45204e4f5420534554000000000000604482015260640161056d565b600454336000908152600a602052604090205410156115da5760405162461bcd60e51b815260206004820152602860248201527f50524f4445583a2055534552204e4f5420454c454749424c4520544f20434c41604482015267494d205052495a4560c01b606482015260840161056d565b6006546001546115f7916001600160a01b03909116908390611d36565b336000818152600a6020526040808220829055516001600160a01b03841692917f4863e8ddbb1d47b2d2751f70a49813cf77503f5e78317defca7727512c95cd9c91a350565b807f0000000000000000000000000000000000000000000000000000000000000000811115801561167c57506000818152600c602052604090205460ff165b6116985760405162461bcd60e51b815260040161056d9061286d565b60025460405163b1eb96c960e01b8152600481018490526001600160a01b039091169063b1eb96c990602401600060405180830381600087803b1580156116de57600080fd5b505af11580156116f2573d6000803e3d6000fd5b505050507f52364007fb5377899732c611e5618a16d94c694e5b7267df99d0ec326d0a457282604051610c1b91815260200190565b61172f61179d565b6001600160a01b0381166117945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161056d565b61148d81611ce6565b6000546001600160a01b03163314610c395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161056d565b438160a00151116118685760405162461bcd60e51b815260206004820152603560248201527f50524f4445583a20494e495420424c4f434b204d5553542042452047524541546044820152744552205448414e2043555252454e5420424c4f434b60581b606482015260840161056d565b438160c00151116118d85760405162461bcd60e51b815260206004820152603460248201527f50524f4445583a20454e4420424c4f434b204d5553542042452047524541544560448201527352205448414e2043555252454e5420424c4f434b60601b606482015260840161056d565b8060a001518160c00151101561194d5760405162461bcd60e51b815260206004820152603460248201527f50524f4445583a204d415443482043414e4e4f5420454e44204245464f52452060448201527326a0aa21a41024a724aa24a0a624ad20aa24a7a760611b606482015260840161056d565b61010081015151156119715760405162461bcd60e51b815260040161056d906129a1565b61012081015151156119955760405162461bcd60e51b815260040161056d906129a1565b610140810151511561148d5760405162461bcd60e51b815260040161056d906129a1565b817f000000000000000000000000000000000000000000000000000000000000000081111580156119f857506000818152600c602052604090205460ff165b611a145760405162461bcd60e51b815260040161056d9061286d565b6000838152600c602052604090205460ff16611a725760405162461bcd60e51b815260206004820152601860248201527f50524f4445583a204556454e54204e4f54204143544956450000000000000000604482015260640161056d565b336000908152600b6020908152604080832086845290915290205460ff1615611af65760405162461bcd60e51b815260206004820152603060248201527f50524f4445583a20555345522043414e4e4f5420424554204d4f52452054484160448201526f138813d390d14814115488115591539560821b606482015260840161056d565b336000908152600b602090815260408083208684528252808320805460ff19166001179055600c909152812060060180547f00000000000000000000000000000000000000000000000000000000000000009290611b559084906128a4565b925050819055507f000000000000000000000000000000000000000000000000000000000000000060036000828254611b8e91906128a4565b9091555060009050826002811115611ba857611ba861250e565b1415611be4576000838152600c602090815260408220600701805460018101825590835291200180546001600160a01b03191633179055611c66565b6002826002811115611bf857611bf861250e565b1415611c34576000838152600c602090815260408220600801805460018101825590835291200180546001600160a01b03191633179055611c66565b6000838152600c602090815260408220600901805460018101825590835291200180546001600160a01b031916331790555b600154611c9e906001600160a01b031633307f0000000000000000000000000000000000000000000000000000000000000000611db8565b336001600160a01b03167fae6991a793b64f1a31dee76253261982129a7ce5af34688cabe35ae7ad44e29e8484604051611cd99291906129f1565b60405180910390a2505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0383166024820152604481018290526109a990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611df6565b6000611da58284612982565b9392505050565b6000611da58284612960565b6040516001600160a01b0380851660248301528316604482015260648101829052611df09085906323b872dd60e01b90608401611d62565b50505050565b6000611e4b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ec89092919063ffffffff16565b8051909150156109a95780806020019051810190611e699190612a15565b6109a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161056d565b6060611ed78484600085611edf565b949350505050565b606082471015611f405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161056d565b6001600160a01b0385163b611f975760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056d565b600080866001600160a01b03168587604051611fb39190612a32565b60006040518083038185875af1925050503d8060008114611ff0576040519150601f19603f3d011682016040523d82523d6000602084013e611ff5565b606091505b5091509150612005828286612010565b979650505050505050565b6060831561201f575081611da5565b82511561202f5782518084602001fd5b8160405162461bcd60e51b815260040161056d9190612a4e565b828054612055906127f1565b90600052602060002090601f01602090048101928261207757600085556120bd565b82601f1061209057805160ff19168380011785556120bd565b828001600101855582156120bd579182015b828111156120bd5782518255916020019190600101906120a2565b506120c9929150612122565b5090565b8280548282559060005260206000209081019282156120bd579160200282015b828111156120bd57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906120ed565b5b808211156120c95760008155600101612123565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561217157612171612137565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156121a0576121a0612137565b604052919050565b801515811461148d57600080fd5b80356106ec816121a8565b60ff8116811461148d57600080fd5b80356106ec816121c1565b600082601f8301126121ec57600080fd5b813567ffffffffffffffff81111561220657612206612137565b612219601f8201601f1916602001612177565b81815284602083860101111561222e57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff82111561226557612265612137565b5060051b60200190565b6001600160a01b038116811461148d57600080fd5b600082601f83011261229557600080fd5b813560206122aa6122a58361224b565b612177565b82815260059290921b840181019181810190868411156122c957600080fd5b8286015b848110156122ed5780356122e08161226f565b83529183019183016122cd565b509695505050505050565b8035600581106106ec57600080fd5b6000610180828403121561231a57600080fd5b61232261214d565b905061232d826121b6565b815261233b602083016121d0565b6020820152604082013567ffffffffffffffff8082111561235b57600080fd5b612367858386016121db565b6040840152606084013560608401526080840135608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100915081840135818111156123b457600080fd5b6123c086828701612284565b8385015250610120915081840135818111156123db57600080fd5b6123e786828701612284565b83850152506101409150818401358181111561240257600080fd5b61240e86828701612284565b838501525050506101606124238184016122f8565b9082015292915050565b60006020828403121561243f57600080fd5b813567ffffffffffffffff81111561245657600080fd5b611ed784828501612307565b8035600381106106ec57600080fd5b6000806040838503121561248457600080fd5b8235915061249460208401612462565b90509250929050565b6000602082840312156124af57600080fd5b5035919050565b60005b838110156124d15781810151838201526020016124b9565b83811115611df05750506000910152565b600081518084526124fa8160208601602086016124b6565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60006101208b1515835260ff8b1660208401528060408401526125498184018b6124e2565b9150508760608301528660808301528560a08301528460c08301528360e08301526005831061257a5761257a61250e565b826101008301529a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156125d05783516001600160a01b0316835292840192918401916001016125ab565b50909695505050505050565b600082601f8301126125ed57600080fd5b813560206125fd6122a58361224b565b82815260059290921b8401810191818101908684111561261c57600080fd5b8286015b848110156122ed5761263181612462565b8352918301918301612620565b6000806040838503121561265157600080fd5b823567ffffffffffffffff8082111561266957600080fd5b818501915085601f83011261267d57600080fd5b8135602061268d6122a58361224b565b82815260059290921b840181019181810190898411156126ac57600080fd5b948201945b838610156126ca578535825294820194908201906126b1565b965050860135925050808211156126e057600080fd5b506126ed858286016125dc565b9150509250929050565b60006020828403121561270957600080fd5b8135611da58161226f565b6000806040838503121561272757600080fd5b82356127328161226f565b946020939093013593505050565b6000602080838503121561275357600080fd5b823567ffffffffffffffff8082111561276b57600080fd5b818501915085601f83011261277f57600080fd5b813561278d6122a58261224b565b81815260059190911b830184019084810190888311156127ac57600080fd5b8585015b838110156127e4578035858111156127c85760008081fd5b6127d68b89838a0101612307565b8452509186019186016127b0565b5098975050505050505050565b600181811c9082168061280557607f821691505b6020821081141561094957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128665761286661283c565b5060010190565b6020808252601e908201527f494e56414c4944204556454e54204944204f52204e4f54204143544956450000604082015260600190565b600082198211156128b7576128b761283c565b500190565b6000602082840312156128ce57600080fd5b8151611da58161226f565b60208082526033908201527f50524f4445583a20414c4c204556454e5453204d5553542042452050524f43456040820152725353454420544f20434c41494d205052495a4560681b606082015260800190565b60006020828403121561293e57600080fd5b8151611da5816121c1565b60008282101561295b5761295b61283c565b500390565b60008261297d57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561299c5761299c61283c565b500290565b60208082526030908201527f50524f4445583a204d415443482043414e4e4f5420484156452042455453204f60408201526f271024a724aa24a0a624ad20aa24a7a760811b606082015260800190565b8281526040810160038310612a0857612a0861250e565b8260208301529392505050565b600060208284031215612a2757600080fd5b8151611da5816121a8565b60008251612a448184602087016124b6565b9190910192915050565b602081526000611da560208301846124e256fea2646970667358221220643e24c5473ca9ae679fd5e513757d7a26113e35945ac3efa8217e6dee4ba4ab64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addEvents((bool,uint8,string,uint256,uint256,uint256,uint256,uint256,address[],address[],address[],uint8)[])": {
        "notice": "TODO SATURDAY "
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2873,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2875,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "oracle",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2881,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "globalPoolSize",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2885,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "minWinnerPoints",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2887,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "winners",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2889,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "winnerPrize",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2891,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "ngoPrize",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2896,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "_eventIdCounter",
        "offset": 0,
        "slot": "8",
        "type": "t_struct(Counter)1983_storage"
      },
      {
        "astId": 2899,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "_eventIdProcessedCounter",
        "offset": 0,
        "slot": "9",
        "type": "t_struct(Counter)1983_storage"
      },
      {
        "astId": 2903,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "hitters",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2909,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "usersByEvent",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 2914,
        "contract": "contracts/Prodex.sol:Prodex",
        "label": "events",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(Event)3905_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(EventState)3911": {
        "encoding": "inplace",
        "label": "enum IProde.EventState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Event)3905_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IProde.Event)",
        "numberOfBytes": "32",
        "value": "t_struct(Event)3905_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)1983_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 1982,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Event)3905_storage": {
        "encoding": "inplace",
        "label": "struct IProde.Event",
        "members": [
          {
            "astId": 3878,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "active",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3880,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "eventOutcome",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 3882,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3884,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "thresholdInit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3886,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "thresholdEnd",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3888,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "blockInit",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "blockEnd",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3892,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "poolSize",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 3895,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "betTeamA",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 3898,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "betTeamB",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 3901,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "betDraw",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 3904,
            "contract": "contracts/Prodex.sol:Prodex",
            "label": "state",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(EventState)3911"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}